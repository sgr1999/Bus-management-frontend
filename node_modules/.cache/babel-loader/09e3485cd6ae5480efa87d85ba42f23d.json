{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { omit } from \"lodash\";\nimport \"../EmployeeComponent/ListEmployee.css\";\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\n\nconst useForm = props => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [password1, setPassword1] = useState({});\n\n  const getValue = event => {\n    event.persist();\n    setPassword1(event.target.value);\n    console.log(\"pass1 useForm : \" + password1);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    let name = event.target.name;\n    let val = event.target.value;\n    validate(event, name, val);\n    setValues({ ...values,\n      // spread operator to store old values\n      [name]: val\n    });\n  };\n\n  const validate = (event, name, values) => {\n    switch (name) {\n      case \"firstName\":\n        if (values.length <= 4) {\n          setErrors({ ...errors,\n            firstName: \"first name atleast have 3 letters\"\n          });\n        } else {\n          console.log(event.target.value);\n          let newObj = omit(errors, \"firstName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"lastName\":\n        if (values.length <= 3) {\n          setErrors({ ...errors,\n            lastName: \"last name atleast have 3 letters\"\n          });\n        } else {\n          let newObj = omit(errors, \"lastName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"userName\":\n        if (!new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(values)) {\n          setErrors({ ...errors,\n            userName: \"Enter a valid email address\"\n          });\n        } else {\n          let newObj = omit(errors, \"userName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"password\":\n        if (!new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/).test(values)) {\n          setErrors({ ...errors,\n            password: \"Password should contains atleast 8 charaters and containing uppercase,lowercase and numbers\"\n          });\n        } else {\n          let newObj = omit(errors, \"password\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"password1\":\n        if (values.password == values.password1) {\n          console.log(\"password1\");\n          console.log(\"password : \" + values.password);\n          console.log(\"password1 : \" + values.password1);\n        }\n\n      default:\n        console.log(\"default\");\n        break;\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    password1\n  };\n};\n\n_s(useForm, \"PVzPXHlPxF9AKl3HtiWQIZEqE7E=\");\n\nexport default useForm;","map":{"version":3,"names":["React","useState","omit","getValue","useForm","props","values","setValues","errors","setErrors","password1","setPassword1","event","persist","target","value","console","log","handleChange","name","val","validate","length","firstName","newObj","lastName","RegExp","test","userName","password"],"sources":["/home/sagarvitakare/Documents/React/bus-management-frontend/src/Hooks/useForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { omit } from \"lodash\";\nimport \"../EmployeeComponent/ListEmployee.css\";\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\n\nconst useForm = (props) => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [password1, setPassword1]=useState({});\n \n  const getValue =(event)=>{\n    event.persist();\n    setPassword1(event.target.value);\n    console.log(\"pass1 useForm : \"+password1);\n  }\n  \n  const handleChange = (event) => {\n    event.persist();\n    \n    let name = event.target.name;\n    let val = event.target.value;\n\n    validate(event, name, val);\n\n    setValues({\n      ...values, // spread operator to store old values\n      [name]: val,\n    });\n  };\n\n  const validate = (event, name, values) => {\n    switch (name) {\n      case \"firstName\":\n        if (values.length <= 4) {\n          setErrors({\n            ...errors,\n            firstName: \"first name atleast have 3 letters\",\n          });\n        } else {\n          console.log(event.target.value);\n          let newObj = omit(errors, \"firstName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"lastName\":\n        if (values.length <= 3) {\n          setErrors({\n            ...errors,\n            lastName: \"last name atleast have 3 letters\",\n          });\n        } else {\n          let newObj = omit(errors, \"lastName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"userName\":\n        if (\n          !new RegExp(\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          ).test(values)\n        ) {\n          setErrors({\n            ...errors,\n            userName: \"Enter a valid email address\",\n          });\n        } else {\n          let newObj = omit(errors, \"userName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"password\":\n        if (\n          !new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/).test(\n            values\n          )\n        ) {\n          setErrors({\n            ...errors,\n            password:\n              \"Password should contains atleast 8 charaters and containing uppercase,lowercase and numbers\",\n          });\n        } else {\n          let newObj = omit(errors, \"password\");\n          setErrors(newObj);\n        }\n        break;\n\n        case \"password1\":\n            if (values.password==values.password1) {\n                console.log(\"password1\")\n                console.log(\"password : \"+values.password)\n                console.log(\"password1 : \"+values.password1)\n            }\n\n      default:\n        console.log(\"default\");\n        break;\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    password1\n  };\n};\n\nexport default useForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}