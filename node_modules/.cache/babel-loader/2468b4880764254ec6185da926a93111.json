{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { omit } from \"lodash\";\nimport \"../EmployeeComponent/ListEmployee.css\";\n\nconst useForm = () => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [password, setPassword] = useState({});\n  const [password1, setPassword1] = useState({});\n\n  const getPasswordValue = event => {\n    event.persist();\n    setPassword(event.target.value);\n  };\n\n  const getPassword1Value = event => {\n    event.persist();\n    setPassword1(event.target.value);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    let name = event.target.name;\n    let val = event.target.value;\n    validate(event, name, val);\n    setValues({ ...values,\n      // spread operator to store old values\n      [name]: val\n    });\n  };\n\n  const validate = (event, name, values) => {\n    switch (name) {\n      case \"firstName\":\n        if (values.length <= 4) {\n          setErrors({ ...errors,\n            firstName: \"first name atleast have 3 letters\"\n          });\n        } else {\n          console.log(event.target.value);\n          let newObj = omit(errors, \"firstName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"lastName\":\n        if (values.length <= 3) {\n          setErrors({ ...errors,\n            lastName: \"last name atleast have 3 letters\"\n          });\n        } else {\n          let newObj = omit(errors, \"lastName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"userName\":\n        if (!new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(values)) {\n          setErrors({ ...errors,\n            userName: \"Enter a valid email address\"\n          });\n        } else {\n          let newObj = omit(errors, \"userName\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"password\":\n        if (!new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/).test(values)) {\n          setErrors({ ...errors,\n            password: \"Password should contains atleast 8 charaters and containing uppercase,lowercase and numbers\"\n          });\n        } else {\n          let newObj = omit(errors, \"password\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      case \"password1\":\n        if (password != password1) {\n          setErrors({ ...errors,\n            password1: \"Password not matched\"\n          });\n        } else {\n          let newObj = omit(errors, \"password1\");\n        }\n\n      default:\n        break;\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    password1,\n    getPasswordValue,\n    getPassword1Value\n  };\n};\n\n_s(useForm, \"R8FE/5wrT+zhs0a9Fjj/32rmASg=\");\n\nexport default useForm;","map":{"version":3,"names":["React","useState","omit","useForm","values","setValues","errors","setErrors","password","setPassword","password1","setPassword1","getPasswordValue","event","persist","target","value","getPassword1Value","handleChange","name","val","validate","length","firstName","console","log","newObj","lastName","RegExp","test","userName"],"sources":["/home/sagarvitakare/Documents/React/bus-management-frontend/src/Hooks/useForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { omit } from \"lodash\";\nimport \"../EmployeeComponent/ListEmployee.css\";\n\nconst useForm = () => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [password,setPassword] = useState({});\n  const [password1, setPassword1]=useState({});\n \n  \n  const getPasswordValue =(event)=>{\n    event.persist();\n    setPassword(event.target.value);\n    \n  }\n\n  const getPassword1Value =(event)=>{\n    event.persist();\n    setPassword1(event.target.value);\n  }\n\n  const handleChange = (event) => {\n    event.persist();\n    \n    let name = event.target.name;\n    let val = event.target.value;\n\n    validate(event, name, val);\n\n    setValues({\n      ...values, // spread operator to store old values\n      [name]: val,\n    });\n  };\n\n  const validate = (event, name, values) => {\n    switch (name) {\n      case \"firstName\":\n        if (values.length <= 4) {\n          setErrors({\n            ...errors,\n            firstName: \"first name atleast have 3 letters\",\n          });\n        } else {\n          console.log(event.target.value);\n          let newObj = omit(errors, \"firstName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"lastName\":\n        if (values.length <= 3) {\n          setErrors({\n            ...errors,\n            lastName: \"last name atleast have 3 letters\",\n          });\n        } else {\n          let newObj = omit(errors, \"lastName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"userName\":\n        if (\n          !new RegExp(\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          ).test(values)\n        ) {\n          setErrors({\n            ...errors,\n            userName: \"Enter a valid email address\",\n          });\n        } else {\n          let newObj = omit(errors, \"userName\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"password\":\n        if (\n          !new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/).test(\n            values\n          )\n        ) {\n          setErrors({\n            ...errors,\n            password:\n              \"Password should contains atleast 8 charaters and containing uppercase,lowercase and numbers\",\n          });\n        } else {\n          let newObj = omit(errors, \"password\");\n          setErrors(newObj);\n        }\n        break;\n\n        case \"password1\":\n            if (password!=password1) {\n               setErrors({\n                 ...errors,\n                 password1:\n                 \"Password not matched\",\n               });\n            }else{\n              let newObj = omit(errors,\"password1\")\n            }\n\n      default:\n        break;\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    password1,\n    getPasswordValue,\n    getPassword1Value\n  };\n};\n\nexport default useForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}